<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lainbo.github.io/</id>
    <title>Lainbo</title>
    <updated>2019-12-18T13:23:16.587Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lainbo.github.io/"/>
    <link rel="self" href="https://lainbo.github.io//atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://lainbo.github.io//images/avatar.png</logo>
    <icon>https://lainbo.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Lainbo</rights>
    <entry>
        <title type="html"><![CDATA[可供日常使用的接口]]></title>
        <id>https://lainbo.github.io//post/jiekoutest</id>
        <link href="https://lainbo.github.io//post/jiekoutest">
        </link>
        <updated>2019-12-18T13:22:04.000Z</updated>
        <content type="html"><![CDATA[<p><b>百度AccessToken</b>:针对HTTP API调用者，百度AIP开...——<a href="https://www.free-api.com/doc/1" target='_blank'>接口地址</a><br><b>语音识别</b>:通过场景识别优化，为车载导航，智能家居和...——<a href="https://www.free-api.com/doc/2" target='_blank'>接口地址</a><br><b>语音合成</b>:将用户输入的文字，转换成流畅自然的语音输...——<a href="https://www.free-api.com/doc/4" target='_blank'>接口地址</a><br><b>出租车票识别(可在线调用)</b>:针对出租车票（现支持北京、上海、深圳）的...——<a href="https://www.free-api.com/doc/6" target='_blank'>接口地址</a><br><b>火车票识别(可在线调用)</b>:支持对大陆火车票的车票号、始发站、目的站...——<a href="https://www.free-api.com/doc/7" target='_blank'>接口地址</a><br><b>数字识别(可在线调用)</b>:对图像中的阿拉伯数字进行识别提取，适用于...——<a href="https://www.free-api.com/doc/8" target='_blank'>接口地址</a><br><b>通用文字识别(可在线调用)</b>:支持多场景下的文字检测识别，多项ICDA...——<a href="https://www.free-api.com/doc/9" target='_blank'>接口地址</a><br><b>网络图片文字识别(可在线调用)</b>:能够快速准确识别各种网络图片中的文字，在...——<a href="https://www.free-api.com/doc/10" target='_blank'>接口地址</a><br><b>身份证识别(可在线调用)</b>:支持对二代居民身份证正反面的关键字段识别...——<a href="https://www.free-api.com/doc/11" target='_blank'>接口地址</a><br><b>银行卡识别(可在线调用)</b>:支持对主流银行卡卡号识别，并返回发卡行和...——<a href="https://www.free-api.com/doc/12" target='_blank'>接口地址</a><br><b>驾驶证识别(可在线调用)</b>:支持对机动车驾驶证正页的关键字段识别，包...——<a href="https://www.free-api.com/doc/13" target='_blank'>接口地址</a><br><b>行驶证识别(可在线调用)</b>:支持对机动车行驶证正页的关键字段识别，包...——<a href="https://www.free-api.com/doc/14" target='_blank'>接口地址</a><br><b>手写文字识别(可在线调用)</b>:能够对手写汉字和手写数字进行识别——<a href="https://www.free-api.com/doc/15" target='_blank'>接口地址</a><br><b>增值税发票识别(可在线调用)</b>:识别并结构化返回增值税发票的各个字段及其...——<a href="https://www.free-api.com/doc/16" target='_blank'>接口地址</a><br><b>营业执照识别(可在线调用)</b>:支持对营业执照关键字段的识别，包括单位名...——<a href="https://www.free-api.com/doc/17" target='_blank'>接口地址</a><br><b>车牌识别(可在线调用)</b>:支持对中国大陆机动车车牌的识别，包括地域...——<a href="https://www.free-api.com/doc/18" target='_blank'>接口地址</a><br><b>票据识别(可在线调用)</b>:支持对增值税发票、火车票、出租车票（支持...——<a href="https://www.free-api.com/doc/19" target='_blank'>接口地址</a><br><b>表格文字识别</b>:自动识别表格线及表格内容，结构化输出表头...——<a href="https://www.free-api.com/doc/20" target='_blank'>接口地址</a><br><b>通用物体和场景识别(可在线调用)</b>:支持超过10万类物体和场景识别，接口返回...——<a href="https://www.free-api.com/doc/21" target='_blank'>接口地址</a><br><b>图像主体检测(可在线调用)</b>:检测图片中关键主体位置，接口支持检测单张...——<a href="https://www.free-api.com/doc/22" target='_blank'>接口地址</a><br><b>品牌logo识别(可在线调用)</b>:实现2万类品牌logo识别，接口返回品牌...——<a href="https://www.free-api.com/doc/23" target='_blank'>接口地址</a><br><b>植物识别(可在线调用)</b>:植物识别支持2万多种通用植物识别、近...——<a href="https://www.free-api.com/doc/24" target='_blank'>接口地址</a><br><b>动物识别(可在线调用)</b>:支持数千种动物识别，接口返回名称——<a href="https://www.free-api.com/doc/25" target='_blank'>接口地址</a><br><b>菜品识别(可在线调用)</b>:识别超过5万个菜品，接口返回菜品的名称、...——<a href="https://www.free-api.com/doc/26" target='_blank'>接口地址</a><br><b>地标识别(可在线调用)</b>:支持识别约5万中外著名地标、景点，接口返...——<a href="https://www.free-api.com/doc/27" target='_blank'>接口地址</a><br><b>车型识别(可在线调用)</b>:识别车辆的具体车型，以小汽车为主，输出图...——<a href="https://www.free-api.com/doc/28" target='_blank'>接口地址</a><br><b>车辆检测</b>:识别图像中所有机动车辆的类型和位置，并对...——<a href="https://www.free-api.com/doc/29" target='_blank'>接口地址</a><br><b>GIF色情图像识别(可在线调用)</b>:人工智能鉴黄技术，智能识别图片和视频中的...——<a href="https://www.free-api.com/doc/30" target='_blank'>接口地址</a><br><b>图像审核(可在线调用)</b>:通过人脸检测、文字识别、色情识别、暴恐识...——<a href="https://www.free-api.com/doc/31" target='_blank'>接口地址</a><br><b>人脸检测与属性分析(可在线调用)</b>:检测图中的人脸，并为人脸标记出边框。检测...——<a href="https://www.free-api.com/doc/39" target='_blank'>接口地址</a><br><b>在线活体检测(可在线调用)</b>:提供在线方式的人脸活体检测能力，在人脸识...——<a href="https://www.free-api.com/doc/41" target='_blank'>接口地址</a><br><b>人体关键点识别(可在线调用)</b>:检测人体并返回人体矩形框位置，精准定位1...——<a href="https://www.free-api.com/doc/44" target='_blank'>接口地址</a><br><b>人流量统计(可在线调用)</b>:统计图像中的人体个数和流动趋势，以头肩为...——<a href="https://www.free-api.com/doc/45" target='_blank'>接口地址</a><br><b>人体检测与属性识别(可在线调用)</b>:检测图像中的所有人体，识别人体的20类属...——<a href="https://www.free-api.com/doc/46" target='_blank'>接口地址</a><br><b>手势识别(可在线调用)</b>:识别图片中的手部位置和手势类型，可识别2...——<a href="https://www.free-api.com/doc/47" target='_blank'>接口地址</a><br><b>人像分割(可在线调用)</b>:识别图像中的人体轮廓，与背景进行分离——<a href="https://www.free-api.com/doc/48" target='_blank'>接口地址</a><br><b>驾驶行为分析(可在线调用)</b>:针对车载场景，识别驾驶员使用手机、抽烟、...——<a href="https://www.free-api.com/doc/49" target='_blank'>接口地址</a><br><b>词法分析(可在线调用)</b>:基于大数据和用户行为的分词、词性标注、命...——<a href="https://www.free-api.com/doc/50" target='_blank'>接口地址</a><br><b>词向量表示(可在线调用)</b>:词向量计算是通过训练的方法，将语言词表中...——<a href="https://www.free-api.com/doc/51" target='_blank'>接口地址</a><br><b>词义相似度(可在线调用)</b>:用于计算两个给定词语的语义相似度，基于自...——<a href="https://www.free-api.com/doc/52" target='_blank'>接口地址</a><br><b>依存句法分析(可在线调用)</b>:利用句子中词与词之间的依存关系来表示词语...——<a href="https://www.free-api.com/doc/53" target='_blank'>接口地址</a><br><b>DNN语言模型(可在线调用)</b>:语言模型是通过计算给定词组成的句子的概率...——<a href="https://www.free-api.com/doc/54" target='_blank'>接口地址</a><br><b>短文本相似度(可在线调用)</b>:短文本相似度计算服务能够提供不同短文本之...——<a href="https://www.free-api.com/doc/55" target='_blank'>接口地址</a><br><b>文本纠错(可在线调用)</b>:文本纠错支持短文本、长文本、语音识别结果...——<a href="https://www.free-api.com/doc/56" target='_blank'>接口地址</a><br><b>情感倾向分析(可在线调用)</b>:针对带有主观描述的中文文本，可自动判断该...——<a href="https://www.free-api.com/doc/57" target='_blank'>接口地址</a><br><b>评论观点抽取(可在线调用)</b>:自动分析评论关注点和评论观点，并输出评论...——<a href="https://www.free-api.com/doc/58" target='_blank'>接口地址</a><br><b>对话情绪识别(可在线调用)</b>:针对一段对话文本，自动识别出当前会话者所...——<a href="https://www.free-api.com/doc/59" target='_blank'>接口地址</a><br><b>文章标签(可在线调用)</b>:文章标签服务对文章的标题和内容进行深度分...——<a href="https://www.free-api.com/doc/60" target='_blank'>接口地址</a><br><b>文章分类(可在线调用)</b>:文章分类服务对文章内容进行深度分析，输出...——<a href="https://www.free-api.com/doc/61" target='_blank'>接口地址</a><br><b>新闻摘要(可在线调用)</b>:基于深度语义分析模型，自动抽取新闻文本中...——<a href="https://www.free-api.com/doc/62" target='_blank'>接口地址</a><br><b>通用翻译(可在线调用)</b>:支持28种语言实时互译，覆盖中、英、日、...——<a href="https://www.free-api.com/doc/64" target='_blank'>接口地址</a><br><b>实体标注(可在线调用)</b>:结合上下文，识别文本中的实体并将其关联到...——<a href="https://www.free-api.com/doc/65" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条，各类社会、国内、国际、体育...——<a href="https://www.free-api.com/doc/66" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:根据手机号码或手机号码的前7位，查询手机...——<a href="https://www.free-api.com/doc/67" target='_blank'>接口地址</a><br><b>彩票开奖结果查询(可在线调用)</b>:目前支持双色球、大乐透、七乐彩、七星彩、...——<a href="https://www.free-api.com/doc/68" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:查询天气情况：温度、湿度、AQI、天气、...——<a href="https://www.free-api.com/doc/69" target='_blank'>接口地址</a><br><b>二维码生成(可在线调用)</b>:按照设定的参数、生成二维码——<a href="https://www.free-api.com/doc/70" target='_blank'>接口地址</a><br><b>汇率(可在线调用)</b>:外汇报价，货币汇率——<a href="https://www.free-api.com/doc/71" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:回顾历史的长河，历史是生活的一面镜子——<a href="https://www.free-api.com/doc/72" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:新华字典在线查字,最新最全——<a href="https://www.free-api.com/doc/74" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:最大最全的新华汉语词典，按拼音查、按部首...——<a href="https://www.free-api.com/doc/75" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信精选文章——<a href="https://www.free-api.com/doc/76" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:搜集网络幽默、搞笑、内涵段子，不间断更新——<a href="https://www.free-api.com/doc/77" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:全国免费的WIFI热点分布——<a href="https://www.free-api.com/doc/78" target='_blank'>接口地址</a><br><b>货币汇率(可在线调用)</b>:支持人民币牌价、外汇汇率查询；数据仅供参...——<a href="https://www.free-api.com/doc/79" target='_blank'>接口地址</a><br><b>手机固话来电显示</b>:查询手机/固话号码归属地，是否诈骗、营销...——<a href="https://www.free-api.com/doc/80" target='_blank'>接口地址</a><br><b>简/繁/火星字体转换(可在线调用)</b>:实现简体、繁体、火星文之间的转换,转换字...——<a href="https://www.free-api.com/doc/81" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:提供全国邮政编码大全,为你快速准确查邮编——<a href="https://www.free-api.com/doc/82" target='_blank'>接口地址</a><br><b>老黄历(可在线调用)</b>:提供老黄历查询,黄历每日吉凶宜忌查询——<a href="https://www.free-api.com/doc/83" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦,周公解梦大全,周公解梦查询，免...——<a href="https://www.free-api.com/doc/84" target='_blank'>接口地址</a><br><b>净值数据(可在线调用)</b>:根据基金类型及分页参数来获取数据(开放式...——<a href="https://www.free-api.com/doc/85" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:十二星座每日、每月、每年运势——<a href="https://www.free-api.com/doc/86" target='_blank'>接口地址</a><br><b>图书电商数据(可在线调用)</b>:于万千之中选择你所爱--好书推荐，值得你...——<a href="https://www.free-api.com/doc/87" target='_blank'>接口地址</a><br><b>身份证查询(可在线调用)</b>:身份证归属地信息查询——<a href="https://www.free-api.com/doc/88" target='_blank'>接口地址</a><br><b>黄金数据(可在线调用)</b>:黄金品种、最新价、开盘价、最高价等信息——<a href="https://www.free-api.com/doc/89" target='_blank'>接口地址</a><br><b>IP地址(可在线调用)</b>:根据查询的IP地址或者域名，查询该IP所...——<a href="https://www.free-api.com/doc/90" target='_blank'>接口地址</a><br><b>笑话大全——文字(可在线调用)</b>:每小时更新。文字笑话大全，信息搜集整理于...——<a href="https://www.free-api.com/doc/92" target='_blank'>接口地址</a><br><b>笑话大全——图片(可在线调用)</b>:每小时更新。图片笑话大全，信息搜集整理于...——<a href="https://www.free-api.com/doc/93" target='_blank'>接口地址</a><br><b>最新新闻</b>:新闻API接口 官方自营 会员接口...——<a href="https://www.free-api.com/doc/94" target='_blank'>接口地址</a><br><b>美图大全</b>:根据几十个种类获取图片列表，每日更新。种...——<a href="https://www.free-api.com/doc/95" target='_blank'>接口地址</a><br><b>手机归属地查询</b>:最全、最新的手机号段数据库。本地找不到的...——<a href="https://www.free-api.com/doc/96" target='_blank'>接口地址</a><br><b>历史上的今天</b>:回顾历史的长河,历史是生活的一面镜子;历...——<a href="https://www.free-api.com/doc/97" target='_blank'>接口地址</a><br><b>来福岛笑话——图片</b>:来福岛爆笑娱乐网创建于2000年，是国内...——<a href="https://www.free-api.com/doc/99" target='_blank'>接口地址</a><br><b>来福岛笑话——文字</b>:来福岛爆笑娱乐网创建于2000年，是国内...——<a href="https://www.free-api.com/doc/100" target='_blank'>接口地址</a><br><b>全国景点查询</b>:全国景点查询接口（来自同程网的合作数据）...——<a href="https://www.free-api.com/doc/101" target='_blank'>接口地址</a><br><b>健康知识</b>:根据养生、用药、两性等频道内容获取健康知...——<a href="https://www.free-api.com/doc/102" target='_blank'>接口地址</a><br><b>猜一猜</b>:随机返回谜语，有2.5万谜语，每日更新。...——<a href="https://www.free-api.com/doc/103" target='_blank'>接口地址</a><br><b>身份证查询</b>:可根据身份证号，查询其签发地、生日、性别...——<a href="https://www.free-api.com/doc/104" target='_blank'>接口地址</a><br><b>爱飞天气插件</b>:爱飞天气是ShowAPI官方天气接口的一...——<a href="https://www.free-api.com/doc/105" target='_blank'>接口地址</a><br><b>PM2.5空气质量指数</b>:本接口每小时更新1次。空气质量指数提供实...——<a href="https://www.free-api.com/doc/106" target='_blank'>接口地址</a><br><b>全球IP地址查询</b>:全球IP地址——<a href="https://www.free-api.com/doc/107" target='_blank'>接口地址</a><br><b>域名查询</b>:域名查询地理位置——<a href="https://www.free-api.com/doc/108" target='_blank'>接口地址</a><br><b>汉字转拼音</b>:将汉字转换为拼音和拼音首字母缩写——<a href="https://www.free-api.com/doc/110" target='_blank'>接口地址</a><br><b>中文分词</b>:中文分词接口。将长段中文切词分开。使用场...——<a href="https://www.free-api.com/doc/111" target='_blank'>接口地址</a><br><b>图片验证码生成</b>:图形|图片验证码生成，支持自定义高宽，文...——<a href="https://www.free-api.com/doc/112" target='_blank'>接口地址</a><br><b>新闻、网页正文抽取</b>:传入一个新网或网页地址，接口将返回此ur...——<a href="https://www.free-api.com/doc/114" target='_blank'>接口地址</a><br><b>实时IP代理查询</b>:代理数量并不是越多越好，可以用才是真正的...——<a href="https://www.free-api.com/doc/116" target='_blank'>接口地址</a><br><b>今日油价</b>:今日油价，可查询全国31个省的油价。每天...——<a href="https://www.free-api.com/doc/117" target='_blank'>接口地址</a><br><b>QQ号码测凶吉</b>:输入qq号码，得到此号码的算命情况，例如...——<a href="https://www.free-api.com/doc/118" target='_blank'>接口地址</a><br><b>地址转换经纬度</b>:根据城市和名称转换为相应的经纬度——<a href="https://www.free-api.com/doc/120" target='_blank'>接口地址</a><br><b>经纬度转换地址</b>:根据经纬度转换成相应地址——<a href="https://www.free-api.com/doc/121" target='_blank'>接口地址</a><br><b>黄历运势</b>:根据输入日期，查看某一天的黄历运势——<a href="https://www.free-api.com/doc/122" target='_blank'>接口地址</a><br><b>十大银行实时汇率</b>:包括工商银行、中国银行、农业银行、交通银...——<a href="https://www.free-api.com/doc/123" target='_blank'>接口地址</a><br><b>汇率转换</b>:1分钟更新1次。当前十大银行，包括工商银...——<a href="https://www.free-api.com/doc/124" target='_blank'>接口地址</a><br><b>添加图片水印</b>:传入底板图及水印图，根据位置参数，接口把...——<a href="https://www.free-api.com/doc/125" target='_blank'>接口地址</a><br><b>图像裁剪</b>:裁剪原图的部份区域——<a href="https://www.free-api.com/doc/126" target='_blank'>接口地址</a><br><b>生成缩略图</b>:根据传入的比率将原图生成缩略图——<a href="https://www.free-api.com/doc/127" target='_blank'>接口地址</a><br><b>星座运势</b>:每天1点、7点、17点更新。包含十二星座...——<a href="https://www.free-api.com/doc/128" target='_blank'>接口地址</a><br><b>PDF文件正文抽取</b>:抽取PDF文件中的文字信息——<a href="https://www.free-api.com/doc/129" target='_blank'>接口地址</a><br><b>网络搜索热词排行</b>:每2小时更新一次。根据分类查询网络最热的...——<a href="https://www.free-api.com/doc/131" target='_blank'>接口地址</a><br><b>二维码识别</b>:根据图片的Base64信息,识别图片中的...——<a href="https://www.free-api.com/doc/132" target='_blank'>接口地址</a><br><b>二维码生成</b>:生成二维码图片 图片存放在showapi...——<a href="https://www.free-api.com/doc/133" target='_blank'>接口地址</a><br><b>中文文本相似度检测</b>:通过计算向量间的夹角（余弦公式），来判断...——<a href="https://www.free-api.com/doc/134" target='_blank'>接口地址</a><br><b>全国火车票查询</b>:数据来源于12306。 包括城市列表\列...——<a href="https://www.free-api.com/doc/135" target='_blank'>接口地址</a><br><b>药品查询</b>:药品信息——<a href="https://www.free-api.com/doc/136" target='_blank'>接口地址</a><br><b>菜谱大全</b>:本菜谱的信息来源于网络,所以本信息仅用于...——<a href="https://www.free-api.com/doc/137" target='_blank'>接口地址</a><br><b>台风最新坐标轨迹</b>:可查询当前存在威胁的台风列表，每个台风的...——<a href="https://www.free-api.com/doc/138" target='_blank'>接口地址</a><br><b>网页级别查询</b>:google的pr查询——<a href="https://www.free-api.com/doc/139" target='_blank'>接口地址</a><br><b>关键词抽取</b>:根据传入的大段文字，使用TextRank...——<a href="https://www.free-api.com/doc/140" target='_blank'>接口地址</a><br><b>全国行政区划分</b>:最新最全的全国省、市、区县、乡镇的分级查...——<a href="https://www.free-api.com/doc/141" target='_blank'>接口地址</a><br><b>微信小程序查询</b>:搜索查询已经上架的微信小程序。包括基本信...——<a href="https://www.free-api.com/doc/142" target='_blank'>接口地址</a><br><b>生成文章摘要</b>:根据传入的长篇文章，系统使用智能算法抽取...——<a href="https://www.free-api.com/doc/143" target='_blank'>接口地址</a><br><b>藏头诗生成</b>:藏头诗生成器。可输入人名生成藏头、藏尾、...——<a href="https://www.free-api.com/doc/144" target='_blank'>接口地址</a><br><b>国际原油价格查询</b>:WTI和布伦特的油价查询——<a href="https://www.free-api.com/doc/145" target='_blank'>接口地址</a><br><b>水质查询</b>:根据地点和时间查询水质——<a href="https://www.free-api.com/doc/146" target='_blank'>接口地址</a><br><b>条码生成</b>:提供EAN_8、EAN_13、CODE_...——<a href="https://www.free-api.com/doc/147" target='_blank'>接口地址</a><br><b>条码识别</b>:提供EAN_8、EAN_13、CODE_...——<a href="https://www.free-api.com/doc/148" target='_blank'>接口地址</a><br><b>全国站点换乘线路查询</b>:提供全国站点换乘线路查询——<a href="https://www.free-api.com/doc/149" target='_blank'>接口地址</a><br><b>全国公交换乘查询</b>:提供全国公交换乘查询——<a href="https://www.free-api.com/doc/150" target='_blank'>接口地址</a><br><b>汽车品牌查询</b>:收录了近200个品牌/子品牌,上万辆车型...——<a href="https://www.free-api.com/doc/151" target='_blank'>接口地址</a><br><b>周公解梦</b>:根据周公解梦全书提供相关信息——<a href="https://www.free-api.com/doc/152" target='_blank'>接口地址</a><br><b>正能量新闻</b>:社会正能量的新闻资讯，每天更新——<a href="https://www.free-api.com/doc/153" target='_blank'>接口地址</a><br><b>全国酒店查询</b>:该接口所返回的所有图片链接将在12小时内...——<a href="https://www.free-api.com/doc/154" target='_blank'>接口地址</a><br><b>经典语句</b>:根据名人，查询经典名言——<a href="https://www.free-api.com/doc/155" target='_blank'>接口地址</a><br><b>商品比价</b>:搜索商品，根据商品url搜索各大商城的历...——<a href="https://www.free-api.com/doc/156" target='_blank'>接口地址</a><br><b>姓名打分</b>:根据姓名，返回此姓名的运势得分——<a href="https://www.free-api.com/doc/157" target='_blank'>接口地址</a><br><b>公司名测吉凶</b>:根据公司名，返回此公司的运势得分——<a href="https://www.free-api.com/doc/158" target='_blank'>接口地址</a><br><b>车牌号测吉凶</b>:根据车牌名，返回此车牌号的运势得分——<a href="https://www.free-api.com/doc/159" target='_blank'>接口地址</a><br><b>手机号测吉凶</b>:根据手机号码，返回此号码的运势得分——<a href="https://www.free-api.com/doc/160" target='_blank'>接口地址</a><br><b>图书ISBN查询</b>:通过国际图书号查询图书相关信息，目前只支...——<a href="https://www.free-api.com/doc/161" target='_blank'>接口地址</a><br><b>影讯查询</b>:影讯查询——<a href="https://www.free-api.com/doc/162" target='_blank'>接口地址</a><br><b>手机套餐售价</b>:全国手机流量充值，4G流量，当月有效——<a href="https://www.free-api.com/doc/163" target='_blank'>接口地址</a><br><b>紫微斗数</b>:根据出生时间定紫薇斗数命盘，供命理研究，...——<a href="https://www.free-api.com/doc/164" target='_blank'>接口地址</a><br><b>唐诗宋词元曲等诗词查询</b>:根据朝代Id或诗人名称查询诗人信息——<a href="https://www.free-api.com/doc/165" target='_blank'>接口地址</a><br><b>脑筋急转弯</b>:查询常见的脑筋急转弯金句——<a href="https://www.free-api.com/doc/166" target='_blank'>接口地址</a><br><b>虚拟数字币|比特币行情</b>:查询主流虚拟货币实时行情，例如btc(比...——<a href="https://www.free-api.com/doc/167" target='_blank'>接口地址</a><br><b>全国房产信息</b>:搜索最新楼盘开盘信息、最新市场房价信息——<a href="https://www.free-api.com/doc/168" target='_blank'>接口地址</a><br><b>手游排行榜</b>:手游最热排行榜及最期待榜——<a href="https://www.free-api.com/doc/169" target='_blank'>接口地址</a><br><b>网游排行榜</b>:网游最热排行榜及最期待榜——<a href="https://www.free-api.com/doc/170" target='_blank'>接口地址</a><br><b>黄金行情</b>:上金所黄金行情——<a href="https://www.free-api.com/doc/171" target='_blank'>接口地址</a><br><b>电商淘宝平台联想词</b>:提供淘宝联想词查询——<a href="https://www.free-api.com/doc/172" target='_blank'>接口地址</a><br><b>中文反义词</b>:中文反义词——<a href="https://www.free-api.com/doc/173" target='_blank'>接口地址</a><br><b>中文近义词</b>:中文近义词——<a href="https://www.free-api.com/doc/174" target='_blank'>接口地址</a><br><b>歇后语查询</b>:查询歇后语列表——<a href="https://www.free-api.com/doc/175" target='_blank'>接口地址</a><br><b>中国互联网络信息</b>:中国互联网络信息——<a href="https://www.free-api.com/doc/176" target='_blank'>接口地址</a><br><b>实时票房排行</b>:实时票房中国（包括香港）、北美、全球票房...——<a href="https://www.free-api.com/doc/177" target='_blank'>接口地址</a><br><b>爱奇艺热点趋势</b>:爱奇艺视频指数——<a href="https://www.free-api.com/doc/178" target='_blank'>接口地址</a><br><b>空气质量指数(可在线调用)</b>:空气质量指数提供实时空气质量情况，目前支...——<a href="https://www.free-api.com/doc/179" target='_blank'>接口地址</a><br><b>IP地址查询(可在线调用)</b>:提供rest风格的IP地址查询接口，只需...——<a href="https://www.free-api.com/doc/180" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:全国天气预报，预报7天天气，以及当天的生...——<a href="https://www.free-api.com/doc/181" target='_blank'>接口地址</a><br><b>人脸识别(可在线调用)</b>:检测图片(Image)中的人脸(Face...——<a href="https://www.free-api.com/doc/182" target='_blank'>接口地址</a><br><b>指纹识别</b>:检测图片(Image)中的指纹(Fing...——<a href="https://www.free-api.com/doc/183" target='_blank'>接口地址</a><br><b>医疗科室(可在线调用)</b>:医药健康接口专用的医疗科室字典项获取——<a href="https://www.free-api.com/doc/184" target='_blank'>接口地址</a><br><b>健康菜谱(可在线调用)</b>:健康菜谱，让人们在宣泄的都市中体验在家常...——<a href="https://www.free-api.com/doc/186" target='_blank'>接口地址</a><br><b>疾病信息(可在线调用)</b>:通过名称取得疾病详情——<a href="https://www.free-api.com/doc/187" target='_blank'>接口地址</a><br><b>药品查询(可在线调用)</b>:通过药品名字直接得到药品说明书、价格、生...——<a href="https://www.free-api.com/doc/188" target='_blank'>接口地址</a><br><b>食疗大全(可在线调用)</b>:通过名称取得食品详情只要是食品都有它...——<a href="https://www.free-api.com/doc/189" target='_blank'>接口地址</a><br><b>手术项目(可在线调用)</b>:通过名称取得手术详情通过名称取得手术...——<a href="https://www.free-api.com/doc/190" target='_blank'>接口地址</a><br><b>药房药店(可在线调用)</b>:通过名称取得药店信息通过名称取得药店...——<a href="https://www.free-api.com/doc/191" target='_blank'>接口地址</a><br><b>病状信息(可在线调用)</b>:通过名称取得病状详情——<a href="https://www.free-api.com/doc/192" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信热门精选文章，实时更新——<a href="https://www.free-api.com/doc/193" target='_blank'>接口地址</a><br><b>国内新闻(可在线调用)</b>:国内新闻数据，实时更新——<a href="https://www.free-api.com/doc/194" target='_blank'>接口地址</a><br><b>国际新闻(可在线调用)</b>:国际新闻数据，实时更新——<a href="https://www.free-api.com/doc/195" target='_blank'>接口地址</a><br><b>体育新闻(可在线调用)</b>:体育新闻数据，实时更新——<a href="https://www.free-api.com/doc/196" target='_blank'>接口地址</a><br><b>科技新闻(可在线调用)</b>:科技新闻数据，实时更新——<a href="https://www.free-api.com/doc/197" target='_blank'>接口地址</a><br><b>奇闻轶事(可在线调用)</b>:奇闻轶事数据，实时更新——<a href="https://www.free-api.com/doc/198" target='_blank'>接口地址</a><br><b>旅游新闻(可在线调用)</b>:旅游热点数据，实时更新——<a href="https://www.free-api.com/doc/199" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:新华字典数据库，可查字的拼音、读音、偏旁...——<a href="https://www.free-api.com/doc/200" target='_blank'>接口地址</a><br><b>五笔字根(可在线调用)</b>:查询汉字的五笔字根——<a href="https://www.free-api.com/doc/201" target='_blank'>接口地址</a><br><b>简繁体火星文转换(可在线调用)</b>:汉字的简体、繁体、火星文转换——<a href="https://www.free-api.com/doc/202" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:成语查询——<a href="https://www.free-api.com/doc/203" target='_blank'>接口地址</a><br><b>歇后语(可在线调用)</b>:歇后语查询，根据关键字搜索歇后语——<a href="https://www.free-api.com/doc/204" target='_blank'>接口地址</a><br><b>唐诗宋词(可在线调用)</b>:根据关键字搜索唐诗宋词——<a href="https://www.free-api.com/doc/205" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:以史为镜，可以知兴替。借历史上的成败得失...——<a href="https://www.free-api.com/doc/206" target='_blank'>接口地址</a><br><b>辞海(可在线调用)</b>:查询词语解释——<a href="https://www.free-api.com/doc/207" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:通过手机号码查询归属地、运营商、号码类型...——<a href="https://www.free-api.com/doc/208" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:海量互联网幽默、内涵段子、趣味图片，不间...——<a href="https://www.free-api.com/doc/209" target='_blank'>接口地址</a><br><b>同义词</b>:通过输入的词语查询对应的同义词——<a href="https://www.free-api.com/doc/210" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:查询周边免费WIFI热点；全国免费WIF...——<a href="https://www.free-api.com/doc/211" target='_blank'>接口地址</a><br><b>NBA赛事(可在线调用)</b>:NBA赛事赛程信息，球队赛程赛事查询——<a href="https://www.free-api.com/doc/212" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:通过地名查询地区邮编，精确到街道——<a href="https://www.free-api.com/doc/213" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦大全——<a href="https://www.free-api.com/doc/214" target='_blank'>接口地址</a><br><b>名人名言(可在线调用)</b>:通过关键字查询名人名言——<a href="https://www.free-api.com/doc/215" target='_blank'>接口地址</a><br><b>今日油价(可在线调用)</b>:可查询全国31个省的油价——<a href="https://www.free-api.com/doc/216" target='_blank'>接口地址</a><br><b>国际白银实时价格</b>:国际交易市场白银实时价格(美元/盎司)，...——<a href="https://www.free-api.com/doc/217" target='_blank'>接口地址</a><br><b>时事新闻检索(可在线调用)</b>:时事新闻，新闻检索等，实时更新——<a href="https://www.free-api.com/doc/218" target='_blank'>接口地址</a><br><b>号码吉凶(可在线调用)</b>:手机号码、QQ号码、车牌号等所有数字类型...——<a href="https://www.free-api.com/doc/219" target='_blank'>接口地址</a><br><b>金额小写转大写(可在线调用)</b>:人民币金额小写转大写——<a href="https://www.free-api.com/doc/220" target='_blank'>接口地址</a><br><b>电影票房(可在线调用)</b>:最新票房榜，网票票房——<a href="https://www.free-api.com/doc/221" target='_blank'>接口地址</a><br><b>全国长途汽车(可在线调用)</b>:全国长途汽车时刻表查询——<a href="https://www.free-api.com/doc/222" target='_blank'>接口地址</a><br><b>足球联赛(可在线调用)</b>:目前支持 英超，西甲，德甲，意甲，法甲，...——<a href="https://www.free-api.com/doc/223" target='_blank'>接口地址</a><br><b>影视影讯(可在线调用)</b>:影视信息播放链接检索，城市影讯检索——<a href="https://www.free-api.com/doc/224" target='_blank'>接口地址</a><br><b>标准电码查询(可在线调用)</b>:提供的标准中文电码查询程序结果——<a href="https://www.free-api.com/doc/225" target='_blank'>接口地址</a><br><b>火车时刻表(可在线调用)</b>:火车时刻表，站到站检索——<a href="https://www.free-api.com/doc/226" target='_blank'>接口地址</a><br><b>姓氏起源(可在线调用)</b>:《百家姓》是我国汉族姓氏总集，载有四百多...——<a href="https://www.free-api.com/doc/227" target='_blank'>接口地址</a><br><b>短链接生成(可在线调用)</b>:查找网提供长的网址链接缩短为新浪短网扯，...——<a href="https://www.free-api.com/doc/228" target='_blank'>接口地址</a><br><b>翻译(可在线调用)</b>:翻译API提供免费开放接口，覆盖中、英、...——<a href="https://www.free-api.com/doc/229" target='_blank'>接口地址</a><br><b>乌云漏洞(可在线调用)</b>:查看乌云最新的安全漏洞——<a href="https://www.free-api.com/doc/230" target='_blank'>接口地址</a><br><b>微信公众号查询(可在线调用)</b>:根据关键字搜索热门微信文章、微信公众号等...——<a href="https://www.free-api.com/doc/231" target='_blank'>接口地址</a><br><b>在线分词(可在线调用)</b>:基于深度学习的中文在线抽词——<a href="https://www.free-api.com/doc/232" target='_blank'>接口地址</a><br><b>MD5破解(可在线调用)</b>:md5密文：16位，32位,sha1(4...——<a href="https://www.free-api.com/doc/233" target='_blank'>接口地址</a><br><b>星座配对(可在线调用)</b>:星座配对测姻缘——<a href="https://www.free-api.com/doc/234" target='_blank'>接口地址</a><br><b>生肖配对(可在线调用)</b>:生肖配对测姻缘——<a href="https://www.free-api.com/doc/235" target='_blank'>接口地址</a><br><b>获取外网IP信息(可在线调用)</b>:取得客户端访问互联网时的外网ip及对应的...——<a href="https://www.free-api.com/doc/236" target='_blank'>接口地址</a><br><b>百度权重(可在线调用)</b>:根据网址查询百度权重——<a href="https://www.free-api.com/doc/237" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条——<a href="https://www.free-api.com/doc/238" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:黄道十二星座每日、每月、每年运势、不间断...——<a href="https://www.free-api.com/doc/239" target='_blank'>接口地址</a><br></p>
<hr>
<p>2019.7.3更新接口</p>
<hr>
<p><b>实时段子(可在线调用)</b>:实时段子,神评版本——<a href="https://www.free-api.com/doc/240">接口地址</a><br><b>音乐搜索(可在线调用)</b>:根据音乐名称返回音乐详情——<a href="https://www.free-api.com/doc/241">接口地址</a><br><b>小说查询(可在线调用)</b>:获取小说的详细信息——<a href="https://www.free-api.com/doc/242">接口地址</a><br><b>天气查询(可在线调用)</b>:获取最近天气情况——<a href="https://www.free-api.com/doc/243">接口地址</a><br><b>音悦tai搜索</b>:音悦Tai-是以高清MV为主的娱乐视频网...——<a href="https://www.free-api.com/doc/244">接口地址</a><br><b>识别身份证文字(可在线调用)</b>:AI人工智能识别身份证图像文字 URL图...——<a href="https://www.free-api.com/doc/245">接口地址</a><br><b>编码解码</b>:常见的编码和解码——<a href="https://www.free-api.com/doc/246">接口地址</a><br><b>网站备案查询</b>:网站备案信息查询接口——<a href="https://www.free-api.com/doc/247">接口地址</a><br><b>身份证信息查询(可在线调用)</b>:身份证信息查询(不支持查询百岁老人)——<a href="https://www.free-api.com/doc/248">接口地址</a><br><b>图片PS</b>:在线图片加文字,返回为字符串,需要处理下——<a href="https://www.free-api.com/doc/249">接口地址</a><br><b>一言</b>:随机返回一句话——<a href="https://www.free-api.com/doc/250">接口地址</a><br><b>短链接生成与还原</b>:短链接生成与还原，包括新浪、腾讯、百度——<a href="https://www.free-api.com/doc/251">接口地址</a><br><b>获取用户大致信息</b>:获取用户信息如网络运营商等等——<a href="https://www.free-api.com/doc/254">接口地址</a><br><b>三合一收款码</b>:包括支付宝，qq，微信——<a href="https://www.free-api.com/doc/255">接口地址</a><br><b>IP查询</b>:根据ip地址获取其所在省市区——<a href="https://www.free-api.com/doc/252">接口地址</a><br><b>IP经纬度查询</b>:根据ip地址和经纬度获取其所在省市区——<a href="https://www.free-api.com/doc/253">接口地址</a></p>
<hr>
<p>2019.8.7更新接口</p>
<hr>
<p><b>淘宝ip(可在线调用)</b>:来自淘宝的ip查询，可以根据ip地址查询...——<a href="https://www.free-api.com/doc/256">接口地址</a><br><b>360ip(可在线调用)</b>:来自360的ip查询，可以根据ip地址查...——<a href="https://www.free-api.com/doc/257">接口地址</a><br><b>地理编码(可在线调用)</b>:将详细的结构化地址转换为高德经纬度坐标。...——<a href="https://www.free-api.com/doc/258">接口地址</a><br><b>逆地理编码(可在线调用)</b>:将经纬度转换为详细结构化的地址，且返回附...——<a href="https://www.free-api.com/doc/259">接口地址</a><br><b>步行路径规划</b>:可以规划100KM以内的步行通勤方案，并...——<a href="https://www.free-api.com/doc/260">接口地址</a><br><b>驾车路径规划(可在线调用)</b>:规划以小客车、轿车通勤出行的方案，并且返...——<a href="https://www.free-api.com/doc/261">接口地址</a><br><b>公交路径规划</b>:规划综合各类公共（火车、公交、地铁）交通...——<a href="https://www.free-api.com/doc/262">接口地址</a><br><b>骑行路径规划(可在线调用)</b>:用于规划骑行通勤方案，规划时不会考虑路况...——<a href="https://www.free-api.com/doc/263">接口地址</a><br><b>距离测量</b>:根据经纬度测量距离——<a href="https://www.free-api.com/doc/264">接口地址</a><br><b>行政区域查询(可在线调用)</b>:根据用户输入的搜索条件可以帮助用户快速的...——<a href="https://www.free-api.com/doc/265">接口地址</a><br><b>矩形区域交通态势</b>:能够确定矩形交通态势情况，路况信息2分钟...——<a href="https://www.free-api.com/doc/266">接口地址</a><br><b>圆形区域交通态势</b>:能够确定圆形交通态势情况，路况信息2分钟...——<a href="https://www.free-api.com/doc/267">接口地址</a><br><b>指定线路交通态势</b>:能够确定指定线路交通情况，路况信息2分钟...——<a href="https://www.free-api.com/doc/268">接口地址</a><br><b>输入提示(可在线调用)</b>:提供根据用户输入的关键词查询返回建议列表——<a href="https://www.free-api.com/doc/269">接口地址</a><br><b>天气查询(可在线调用)</b>:查询目标区域当前/未来的天气情况——<a href="https://www.free-api.com/doc/270">接口地址</a><br><b>IP定位(可在线调用)</b>:将IP信息转换为地理位置信息——<a href="https://www.free-api.com/doc/271">接口地址</a><br><b>地点范围查询(可在线调用)</b>:根据经纬度查询查询其地址相关信息——<a href="https://www.free-api.com/doc/272">接口地址</a></p>
<hr>
<p>2019.9.9更新接口</p>
<hr>
<p><b>行政区划区域检索(可在线调用)</b>:开发者可通过该功能，检索某一行政区划内（...——<a href="https://www.free-api.com/doc/273">接口地址</a><br><b>圆形区域检索(可在线调用)</b>:开发者可设置圆心和半径，检索圆形区域内的...——<a href="https://www.free-api.com/doc/274">接口地址</a><br><b>矩形区域检索(可在线调用)</b>:开发者可设置检索区域左下角和右上角坐标，...——<a href="https://www.free-api.com/doc/275">接口地址</a><br><b>地点详情检索(可在线调用)</b>:地点详情检索针对指定POI，检索其相关的...——<a href="https://www.free-api.com/doc/276">接口地址</a><br><b>地点输入提示(可在线调用)</b>:用户可通过该服务，匹配用户输入关键词的地...——<a href="https://www.free-api.com/doc/277">接口地址</a><br><b>地理编码服务(可在线调用)</b>:用户可通过该功能，将结构化地址（省/市/...——<a href="https://www.free-api.com/doc/278">接口地址</a><br><b>全球逆地理编码(可在线调用)</b>:用户可通过该功能，将位置坐标解析成对应的...——<a href="https://www.free-api.com/doc/279">接口地址</a><br><b>公交路线规划(可在线调用)</b>:根据起点和终点检索符合条件的公共交通方案...——<a href="https://www.free-api.com/doc/280">接口地址</a><br><b>骑行路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的骑行路线规划...——<a href="https://www.free-api.com/doc/281">接口地址</a><br><b>驾车路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的驾车路线规划...——<a href="https://www.free-api.com/doc/282">接口地址</a><br><b>批量算路</b>:用户可通过该服务，根据起点和终点坐标计算...——<a href="https://www.free-api.com/doc/283">接口地址</a><br><b>普通IP定位(可在线调用)</b>:用户可以通过该服务，根据IP定位来获取大...——<a href="https://www.free-api.com/doc/284">接口地址</a><br><b>道路实时路况查询(可在线调用)</b>:查询具体道路的实时拥堵评价和拥堵路段、拥...——<a href="https://www.free-api.com/doc/285">接口地址</a><br><b>时间偏移查询(可在线调用)</b>:查询坐标所在地与协调世界时的时间偏移信息...——<a href="https://www.free-api.com/doc/286">接口地址</a><br><b>周边上车点推荐(可在线调用)</b>:用户可通过该功能检索坐标点周围的上车点。...——<a href="https://www.free-api.com/doc/287">接口地址</a><br><b>非百度坐标系转换(可在线调用)</b>:用户可通过该服务，实现 非百度坐标系→百...——<a href="https://www.free-api.com/doc/288">接口地址</a><br><b>快递查询(可在线调用)</b>:可根据快递单号查询大部分主流快递的快递信...——<a href="https://www.free-api.com/doc/289">接口地址</a><br><b>文件转换</b>:文件转换成指定格式，成功则返回成功转换的...——<a href="https://www.free-api.com/doc/290">接口地址</a><br><b>获取文件转换内容</b>:根据文件转换成功所获取的id，查询转换成...——<a href="https://www.free-api.com/doc/291">接口地址</a></p>
<hr>
<p>2019.10.8更新接口</p>
<hr>
<p><b>全球IP地理位置(可在线调用)</b>:单个IPv4 / IPv6地址或域名...——<a href="https://www.free-api.com/doc/292">接口地址</a><br><b>域名备案(可在线调用)</b>:根据域名查询域名备案状态——<a href="https://www.free-api.com/doc/293">接口地址</a><br><b>十五天天气预报</b>:采用城市ID来精准查询15天内的天气，接...——<a href="https://www.free-api.com/doc/294">接口地址</a><br><b>农历查询(可在线调用)</b>:根据日期获取农历、黄历、禁忌、星期、生肖...——<a href="https://www.free-api.com/doc/295">接口地址</a><br><b>ICP备案查询(可在线调用)</b>:根据域名查询ICP备案号——<a href="https://www.free-api.com/doc/296">接口地址</a><br><b>三合一收款二维码</b>:将QQ、微信、支付宝收款集合到一起，省去...——<a href="https://www.free-api.com/doc/297">接口地址</a><br><b>二维码生成</b>:将网址直接转换成二维码图片——<a href="https://www.free-api.com/doc/298">接口地址</a><br><b>二维码解码(可在线调用)</b>:将二维码图片进行解码，解析处理——<a href="https://www.free-api.com/doc/299">接口地址</a><br><b>短网址生成(可在线调用)</b>:将长网址进行缩短，支持百度、新浪、腾讯短...——<a href="https://www.free-api.com/doc/300">接口地址</a><br><b>短网址还原(可在线调用)</b>:将缩短的短网址进行还原,支持常见的短网址——<a href="https://www.free-api.com/doc/301">接口地址</a><br><b>网易云音乐随机歌曲(可在线调用)</b>:网易云音乐，随机歌曲输出——<a href="https://www.free-api.com/doc/302">接口地址</a><br><b>获取访客相关信息(可在线调用)</b>:根据访客IP地址，操作系统，浏览器，访问...——<a href="https://www.free-api.com/doc/303">接口地址</a><br><b>随机头像输出(可在线调用)</b>:随机头像输出——<a href="https://www.free-api.com/doc/304">接口地址</a></p>
<hr>
<p>2019.11.5更新接口</p>
<hr>
<p><b>文章短篇</b>:根据日期获取一篇文章，有网上的，也有名家...——<a href="https://www.free-api.com/doc/305">接口地址</a><br><b>必应故事</b>:随机获取来自必应的故事，可根据pid获取...——<a href="https://www.free-api.com/doc/306">接口地址</a><br><b>每日一言</b>:获取来自一言、有道或金山词霸的每日一言内...——<a href="https://www.free-api.com/doc/307">接口地址</a><br><b>二维码解析</b>:还原二维码的原始URL，支持支付宝，微信...——<a href="https://www.free-api.com/doc/308">接口地址</a><br><b>生成海报</b>:根据提交的内容格式化生成可分享的精美海报——<a href="https://www.free-api.com/doc/309">接口地址</a><br><b>历史上的今天</b>:历史上的今天——<a href="https://www.free-api.com/doc/310">接口地址</a><br><b>生成二维码</b>:可根据传入的内容，生成对应的二维码，还可...——<a href="https://www.free-api.com/doc/311">接口地址</a><br><b>IP地址详情信息</b>:IP地址详情信息查询——<a href="https://www.free-api.com/doc/312">接口地址</a><br><b>XLS生成</b>:生成XLS——<a href="https://www.free-api.com/doc/313">接口地址</a><br><b>土味情话</b>:和妹妹说的情话，返回一句随机的内容——<a href="https://www.free-api.com/doc/314">接口地址</a><br><b>随机笑话(可在线调用)</b>:随机的笑话——<a href="https://www.free-api.com/doc/315">接口地址</a></p>
<hr>
<p>2019.12.4更新接口</p>
<hr>
<p><b>经纬度信息(可在线调用)</b>:获取当前经纬度信息——<a href="https://www.free-api.com/doc/316">接口地址</a><br><b>历史上的今天(可在线调用)</b>:历史上的今天——<a href="https://www.free-api.com/doc/317">接口地址</a><br><b>Bing 壁纸获取(可在线调用)</b>:获取最近的Bing 壁纸——<a href="https://www.free-api.com/doc/318">接口地址</a><br><b>天气查询(可在线调用)</b>:获取今天和未来三天的天气情况，来源于高德——<a href="https://www.free-api.com/doc/319">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市名，获取今天和未来三天的天气情况...——<a href="https://www.free-api.com/doc/320">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市id，获取未来15天的天气情况，...——<a href="https://www.free-api.com/doc/321">接口地址</a><br><b>手机归属地查询(可在线调用)</b>:根据手机号码查询手机号的归属地信息——<a href="https://www.free-api.com/doc/322">接口地址</a><br><b>手机归属地查询</b>:根据手机号码查询手机号的归属地信息，来源...——<a href="https://www.free-api.com/doc/323">接口地址</a><br><b>IP域名归属地查询(可在线调用)</b>:查询IP或者域名归属地——<a href="https://www.free-api.com/doc/324">接口地址</a><br><b>身份证查询(可在线调用)</b>:根据身份证获取该身份证号码的籍贯，出生年...——<a href="https://www.free-api.com/doc/325">接口地址</a><br><b>淘宝关键字(可在线调用)</b>:淘宝搜索关键字——<a href="https://www.free-api.com/doc/326">接口地址</a><br><b>百度关键字</b>:百度搜索关键字——<a href="https://www.free-api.com/doc/327">接口地址</a><br><b>Bing关键字(可在线调用)</b>:Bing搜索关键字——<a href="https://www.free-api.com/doc/328">接口地址</a><br><b>获取用户设备信息(可在线调用)</b>:通过 user-agent 分析用户设备...——<a href="https://www.free-api.com/doc/329">接口地址</a><br><b>百度音乐搜索(可在线调用)</b>:根据关键字获取音乐的相关信息——<a href="https://www.free-api.com/doc/330">接口地址</a></p>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[流式布局]]></title>
        <id>https://lainbo.github.io//post/liu-shi-bu-ju</id>
        <link href="https://lainbo.github.io//post/liu-shi-bu-ju">
        </link>
        <updated>2019-11-29T11:58:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="移动web开发流式布局">移动web开发流式布局</h1>
<h3 id="10-移动端基础">1.0 移动端基础</h3>
<h4 id="11浏览器现状">1.1浏览器现状</h4>
<p>PC端常见浏览器：360浏览器、谷歌浏览器、火狐浏览器、QQ浏览器、百度浏览器、搜狗浏览器、IE浏览器。</p>
<p>移动端常见浏览器：UC浏览器，QQ浏览器，欧朋浏览器，百度手机浏览器，360安全浏览器，谷歌浏览器，搜狗手机浏览器，猎豹浏览器，以及其他杂牌浏览器。</p>
<p>国内的UC和QQ，百度等手机浏览器都是根据Webkit修改过来的内核，国内尚无自主研发的内核，就像国内的手机操作系统都是基于Android修改开发的一样。</p>
<p><strong>总结：兼容移动端主流浏览器，处理Webkit内核浏览器即可。</strong></p>
<h4 id="12-手机屏幕的现状">1.2 手机屏幕的现状</h4>
<ul>
<li>移动端设备屏幕尺寸非常多，碎片化严重。</li>
<li>Android设备有多种分辨率：480x800, 480x854, 540x960, 720x1280，1080x1920等，还有传说中的2K，4k屏。</li>
<li>近年来iPhone的碎片化也加剧了，其设备的主要分辨率有：640x960, 640x1136, 750x1334, 1242x2208等。</li>
<li>作为开发者无需关注这些分辨率，因为我们常用的尺寸单位是 px 。</li>
</ul>
<h4 id="13常见移动端屏幕尺寸">1.3常见移动端屏幕尺寸</h4>
<img src="images/1.png">
<h4 id="14移动端调试方法">1.4移动端调试方法</h4>
<ul>
<li>Chrome DevTools（谷歌浏览器）的模拟手机调试</li>
<li>搭建本地web服务器，手机和服务器一个局域网内，通过手机访问服务器</li>
<li>使用外网服务器，直接IP或域名访问</li>
</ul>
<h3 id="20-视口">2.0 视口</h3>
<p>视口（viewport）就是浏览器显示页面内容的屏幕区域。 视口可以分为布局视口、视觉视口和理想视口</p>
<h4 id="21-布局视口-layout-viewport">2.1 布局视口 layout viewport</h4>
<p>一般移动设备的浏览器都默认设置了一个布局视口，用于解决早期的PC端页面在手机上显示的问题。</p>
<p>iOS, Android基本都将这个视口分辨率设置为 980px，所以PC上的网页大多都能在手机上呈现，只不过元素看上去很小，一般默认可以通过手动缩放网页。</p>
<img src="./images/2.png">
<p>####2.2视觉视口 visual viewport</p>
<p>字面意思，它是用户正在看到的网站的区域。注意：是网站的区域。</p>
<p>我们可以通过缩放去操作视觉视口，但不会影响布局视口，布局视口仍保持原来的宽度。</p>
<img src="./images/3.png">
<h4 id="23理想视口-ideal-viewport">2.3理想视口 ideal viewport</h4>
<p>为了使网站在移动端有最理想的浏览和阅读宽度而设定</p>
<p>理想视口，对设备来讲，是最理想的视口尺寸</p>
<p>需要手动添写meta视口标签通知浏览器操作</p>
<p>meta视口标签的主要目的：布局视口的宽度应该与理想视口的宽度一致，简单理解就是设备有多宽，我们布局的视口就多宽</p>
<p><strong>总结：我们开发最终会用理想视口，而理想视口就是将布局视口的宽度修改为视觉视口</strong></p>
<h4 id="24meta标签">2.4meta标签</h4>
<img src="./images/4.png">
<p>最标准的viewport设置</p>
<ul>
<li>视口宽度和设备保持一致</li>
<li>视口的默认缩放比例1.0</li>
<li>不允许用户自行缩放</li>
<li>最大允许的缩放比例1.0</li>
<li>最小允许的缩放比例1.0</li>
</ul>
<h3 id="30二倍图">3.0二倍图</h3>
<p>####3.1物理像素&amp;物理像素比</p>
<p>物理像素点指的是屏幕显示的最小颗粒，是物理真实存在的。这是厂商在出厂时就设置好了,比如苹果6 是  750* 1334</p>
<p>我们开发时候的1px 不是一定等于1个物理像素的</p>
<p>一个px的能显示的物理像素点的个数，称为物理像素比或屏幕像素比</p>
<p>如果把1张100*100的图片放到手机里面会按照物理像素比给我们缩放</p>
<p>lRetina（视网膜屏幕）是一种显示技术，可以将把更多的物理像素点压缩至一块屏幕里，从而达到更高的分辨率，并提高屏幕显示的细腻程度。</p>
<p>对于一张 50px * 50px 的图片,在手机或 Retina 屏中打开，按照刚才的物理像素比会放大倍数，这样会造成图片模糊</p>
<p>在标准的viewport设置中，使用倍图来提高图片质量，解决在高清设备中的模糊问题</p>
<p>通常使用二倍图， 因为iPhone 6 的影响背景图片 注意缩放问题</p>
<h4 id="32背景缩放background-size">3.2背景缩放background-size</h4>
<p>background-size 属性规定背景图像的尺寸</p>
<pre><code>background-size: 背景图片宽度 背景图片高度;
</code></pre>
<p>单位： 长度|百分比|cover|contain;</p>
<p>cover把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。</p>
<p>contain把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域</p>
<h3 id="40-移动开发选择和技术解决方案">4.0 移动开发选择和技术解决方案</h3>
<p>####4.1移动端主流方案</p>
<p>1.单独制作移动端页面（主流）</p>
<p>通常情况下，网址域名前面加 m(mobile)<br>
可以打开移动端。通过判断设备，如果是移动设备打开，则跳到移动端页面。</p>
<p>也就是说，PC端和移动端为两套网站，pc端是pc断的样式，移动端在写一套，专门针对移动端适配的一套网站</p>
<p>京东pc端：</p>
<img src="./images/5.png">
<p>京东移动端：</p>
<img src="./images/6.jpg">
<p>2.响应式页面兼容移动端（其次）</p>
<img src="./images/7.jpg">
<p>响应式网站：即pc和移动端共用一套网站，只不过在不同屏幕下，样式会自动适配</p>
<h4 id="42-移动端技术解决方案">4.2 移动端技术解决方案</h4>
<p>1.移动端浏览器兼容问题</p>
<p>移动端浏览器基本以 webkit 内核为主，因此我们就考虑webkit兼容性问题。</p>
<p>我们可以放心使用 H5 标签和 CSS3 样式。</p>
<p>同时我们浏览器的私有前缀我们只需要考虑添加 webkit 即可</p>
<p>2.移动端公共样式</p>
<p>移动端 CSS 初始化推荐使用 normalize.css/</p>
<p>Normalize.css：保护了有价值的默认值</p>
<p>Normalize.css：修复了浏览器的bug</p>
<p>Normalize.css：是模块化的</p>
<p>Normalize.css：拥有详细的文档</p>
<p>官网地址： <a href="http://necolas.github.io/normalize.css/">http://necolas.github.io/normalize.css/</a></p>
<h4 id="43-移动端大量使用-css3盒子模型box-sizin">4.3 移动端大量使用 CSS3盒子模型box-sizin</h4>
<p>传统模式宽度计算：盒子的宽度 = CSS中设置的width + border + padding</p>
<p>CSS3盒子模型：     盒子的宽度=  CSS中设置的宽度width 里面包含了 border 和 padding</p>
<p>也就是说，我们的CSS3中的盒子模型， padding 和 border 不会撑大盒子了</p>
<pre><code>/*CSS3盒子模型*/
box-sizing: border-box;
/*传统盒子模型*/
box-sizing: content-box;

</code></pre>
<p>移动端可以全部CSS3 盒子模型</p>
<p>PC端如果完全需要兼容，我们就用传统模式，如果不考虑兼容性，我们就选择 CSS3 盒子模型</p>
<h4 id="44移动端特殊样式">4.4移动端特殊样式</h4>
<pre><code>    /*CSS3盒子模型*/
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    /*点击高亮我们需要清除清除  设置为transparent 完成透明*/
    -webkit-tap-highlight-color: transparent;
    /*在移动端浏览器默认的外观在iOS上加上这个属性才能给按钮和输入框自定义样式*/
    -webkit-appearance: none;
    /*禁用长按页面时的弹出菜单*/
    img,a { -webkit-touch-callout: none; }

</code></pre>
<h3 id="50移动端常见布局">5.0移动端常见布局</h3>
<p>移动端单独制作</p>
<ul>
<li>流式布局（百分比布局）</li>
<li>flex 弹性布局（强烈推荐）</li>
<li>less+rem+媒体查询布局</li>
<li>混合布局</li>
</ul>
<p>响应式</p>
<ul>
<li>媒体查询</li>
<li>bootstarp</li>
</ul>
<p>流式布局：</p>
<p>流式布局，就是百分比布局，也称非固定像素布局。</p>
<p>通过盒子的宽度设置成百分比来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。</p>
<p>流式布局方式是移动web开发使用的比较常见的布局方式。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[请求、异步]]></title>
        <id>https://lainbo.github.io//post/qing-qiu-yi-bu</id>
        <link href="https://lainbo.github.io//post/qing-qiu-yi-bu">
        </link>
        <updated>2019-11-29T02:32:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="接口调用方式">接口调用方式</h3>
<ul>
<li>原生ajax</li>
<li>基于jQuery的ajax</li>
<li>fetch</li>
<li>axios</li>
</ul>
<h3 id="异步">异步</h3>
<ul>
<li>JavaScript的执行环境是「单线程」</li>
<li>所谓单线程，是指JS引擎中负责解释和执行JavaScript代码的线程只有一个，也就是一次只能完成一项任务，这个任务执行完后才能执行下一个，它会「阻塞」其他任务。这个任务可称为主线程</li>
<li>异步模式可以一起执行<strong>多个任务</strong></li>
<li>JS中常见的异步调用
<ul>
<li>定时任何</li>
<li>ajax</li>
<li>事件函数</li>
</ul>
</li>
</ul>
<h3 id="promise">promise</h3>
<ul>
<li>主要解决异步深层嵌套的问题</li>
<li>promise 提供了简洁的API  使得异步操作更加容易</li>
</ul>
<pre><code class="language-html"> 
  &lt;script type=&quot;text/javascript&quot;&gt;
    /*
     1. Promise基本使用
           我们使用new来构建一个Promise  Promise的构造函数接收一个参数，是函数，并且传入两个参数：		   resolve，reject， 分别表示异步操作执行成功后的回调函数和异步操作执行失败后的回调函数
    */


    var p = new Promise(function(resolve, reject){
      //2. 这里用于实现异步任务  setTimeout
      setTimeout(function(){
        var flag = false;
        if(flag) {
          //3. 正常情况
          resolve('hello');
        }else{
          //4. 异常情况
          reject('出错了');
        }
      }, 100);
    });
    //  5 Promise实例生成以后，可以用then方法指定resolved状态和reject状态的回调函数 
    //  在then方法中，你也可以直接return数据而不是Promise对象，在后面的then中就可以接收到数据了  
    p.then(function(data){
      console.log(data)
    },function(info){
      console.log(info)
    });
  &lt;/script&gt;
</code></pre>
<h3 id="基于promise发送ajax请求">基于Promise发送Ajax请求</h3>
<pre><code class="language-html"> 
  &lt;script type=&quot;text/javascript&quot;&gt;
    /*
      基于Promise发送Ajax请求
    */
    function queryData(url) {
     #   1.1 创建一个Promise实例
      var p = new Promise(function(resolve, reject){
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function(){
          if(xhr.readyState != 4) return;
          if(xhr.readyState == 4 &amp;&amp; xhr.status == 200) {
            # 1.2 处理正常的情况
            resolve(xhr.responseText);
          }else{
            # 1.3 处理异常情况
            reject('服务器错误');
          }
        };
        xhr.open('get', url);
        xhr.send(null);
      });
      return p;
    }
	# 注意：  这里需要开启一个服务 
    # 在then方法中，你也可以直接return数据而不是Promise对象，在后面的then中就可以接收到数据了
    queryData('http://localhost:3000/data')
      .then(function(data){
        console.log(data)
        #  1.4 想要继续链式编程下去 需要 return  
        return queryData('http://localhost:3000/data1');
      })
      .then(function(data){
        console.log(data);
        return queryData('http://localhost:3000/data2');
      })
      .then(function(data){
        console.log(data)
      });
  &lt;/script&gt;
</code></pre>
<h3 id="promise-基本api">Promise  基本API</h3>
<h4 id="实例方法">实例方法</h4>
<h5 id="then">.then()</h5>
<ul>
<li>得到异步任务正确的结果</li>
</ul>
<h5 id="catch">.catch()</h5>
<ul>
<li>获取异常信息</li>
</ul>
<h5 id="finally">.finally()</h5>
<ul>
<li>成功与否都会执行（不是正式标准）</li>
</ul>
<pre><code class="language-html">  
  &lt;script type=&quot;text/javascript&quot;&gt;
    /*
      Promise常用API-实例方法
    */
    // console.dir(Promise);
    function foo() {
      return new Promise(function(resolve, reject){
        setTimeout(function(){
          // resolve(123);
          reject('error');
        }, 100);
      })
    }
    // foo()
    //   .then(function(data){
    //     console.log(data)
    //   })
    //   .catch(function(data){
    //     console.log(data)
    //   })
    //   .finally(function(){
    //     console.log('finished')
    //   });

    // --------------------------
    // 两种写法是等效的
    foo()
      .then(function(data){
        # 得到异步任务正确的结果
        console.log(data)
      },function(data){
        # 获取异常信息
        console.log(data)
      })
      # 成功与否都会执行（不是正式标准） 
      .finally(function(){
        console.log('finished')
      });
  &lt;/script&gt;
</code></pre>
<h4 id="静态方法">静态方法</h4>
<h5 id="all">.all()</h5>
<ul>
<li><code>Promise.all</code>方法接受一个数组作参数，数组中的对象（p1、p2、p3）均为promise实例（如果不是一个promise，该项会被用<code>Promise.resolve</code>转换为一个promise)。它的状态由这三个promise实例决定</li>
</ul>
<h5 id="race">.race()</h5>
<ul>
<li><code>Promise.race</code>方法同样接受一个数组作参数。当p1, p2, p3中有一个实例的状态发生改变（变为<code>fulfilled</code>或<code>rejected</code>），p的状态就跟着改变。并把第一个改变状态的promise的返回值，传给p的回调函数</li>
</ul>
<p>​</p>
<pre><code class="language-html">  &lt;script type=&quot;text/javascript&quot;&gt;
    /*
      Promise常用API-对象方法
    */
    // console.dir(Promise)
    function queryData(url) {
      return new Promise(function(resolve, reject){
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function(){
          if(xhr.readyState != 4) return;
          if(xhr.readyState == 4 &amp;&amp; xhr.status == 200) {
            // 处理正常的情况
            resolve(xhr.responseText);
          }else{
            // 处理异常情况
            reject('服务器错误');
          }
        };
        xhr.open('get', url);
        xhr.send(null);
      });
    }

    var p1 = queryData('http://localhost:3000/a1');
    var p2 = queryData('http://localhost:3000/a2');
    var p3 = queryData('http://localhost:3000/a3');
     Promise.all([p1,p2,p3]).then(function(result){
       //   all 中的参数  [p1,p2,p3]   和 返回的结果一 一对应[&quot;HELLO TOM&quot;, &quot;HELLO JERRY&quot;, &quot;HELLO SPIKE&quot;]
       console.log(result) //[&quot;HELLO TOM&quot;, &quot;HELLO JERRY&quot;, &quot;HELLO SPIKE&quot;]
     })
    Promise.race([p1,p2,p3]).then(function(result){
      // 由于p1执行较快，Promise的then()将获得结果'P1'。p2,p3仍在继续执行，但执行结果将被丢弃。
      console.log(result) // &quot;HELLO TOM&quot;
    })
  &lt;/script&gt;
</code></pre>
<h3 id="fetch">fetch</h3>
<ul>
<li>Fetch API是新的ajax解决方案 Fetch会返回Promise</li>
<li><strong>fetch不是ajax的进一步封装，而是原生js，没有使用XMLHttpRequest对象</strong>。</li>
<li>fetch(url, options).then(）</li>
</ul>
<pre><code class="language-html">  &lt;script type=&quot;text/javascript&quot;&gt;
    /*
      Fetch API 基本用法
      	fetch(url).then()
     	第一个参数请求的路径   Fetch会返回Promise   所以我们可以使用then 拿到请求成功的结果 
    */
    fetch('http://localhost:3000/fdata').then(function(data){
      // text()方法属于fetchAPI的一部分，它返回一个Promise实例对象，用于获取后台返回的数据
      return data.text();
    }).then(function(data){
      //   在这个then里面我们能拿到最终的数据  
      console.log(data);
    })
  &lt;/script&gt;
</code></pre>
<h4 id="fetch-api-中的-http-请求">fetch API  中的 HTTP  请求</h4>
<ul>
<li>fetch(url, options).then(）</li>
<li>HTTP协议，它给我们提供了很多的方法，如POST，GET，DELETE，UPDATE，PATCH和PUT
<ul>
<li>默认的是 GET 请求</li>
<li>需要在 options 对象中 指定对应的 method       method:请求使用的方法</li>
<li>post 和 普通 请求的时候 需要在options 中 设置  请求头 headers   和  body</li>
</ul>
</li>
</ul>
<pre><code class="language-html">   &lt;script type=&quot;text/javascript&quot;&gt;
        /*
              Fetch API 调用接口传递参数
        */
       #1.1 GET参数传递 - 传统URL  通过url  ？ 的形式传参 
        fetch('http://localhost:3000/books?id=123', {
            	# get 请求可以省略不写 默认的是GET 
                method: 'get'
            })
            .then(function(data) {
            	# 它返回一个Promise实例对象，用于获取后台返回的数据
                return data.text();
            }).then(function(data) {
            	# 在这个then里面我们能拿到最终的数据  
                console.log(data)
            });

      #1.2  GET参数传递  restful形式的URL  通过/ 的形式传递参数  即  id = 456 和id后台的配置有关   
        fetch('http://localhost:3000/books/456', {
            	# get 请求可以省略不写 默认的是GET 
                method: 'get'
            })
            .then(function(data) {
                return data.text();
            }).then(function(data) {
                console.log(data)
            });

       #2.1  DELETE请求方式参数传递      删除id  是  id=789
        fetch('http://localhost:3000/books/789', {
                method: 'delete'
            })
            .then(function(data) {
                return data.text();
            }).then(function(data) {
                console.log(data)
            });

       #3 POST请求传参
        fetch('http://localhost:3000/books', {
                method: 'post',
            	# 3.1  传递数据 
                body: 'uname=lisi&amp;pwd=123',
            	#  3.2  设置请求头 
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                }
            })
            .then(function(data) {
                return data.text();
            }).then(function(data) {
                console.log(data)
            });

       # POST请求传参
        fetch('http://localhost:3000/books', {
                method: 'post',
                body: JSON.stringify({
                    uname: '张三',
                    pwd: '456'
                }),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(function(data) {
                return data.text();
            }).then(function(data) {
                console.log(data)
            });

        # PUT请求传参     修改id 是 123 的 
        fetch('http://localhost:3000/books/123', {
                method: 'put',
                body: JSON.stringify({
                    uname: '张三',
                    pwd: '789'
                }),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(function(data) {
                return data.text();
            }).then(function(data) {
                console.log(data)
            });
    &lt;/script&gt;
</code></pre>
<h4 id="fetchapi-中-响应格式">fetchAPI 中 响应格式</h4>
<ul>
<li>用fetch来获取数据，如果响应正常返回，我们首先看到的是一个response对象，其中包括返回的一堆原始字节，这些字节需要在收到后，需要我们通过调用方法将其转换为相应格式的数据，比如<code>JSON</code>，<code>BLOB</code>或者<code>TEXT</code>等等</li>
</ul>
<pre><code class="language-js">
    /*
      Fetch响应结果的数据格式
    */
    fetch('http://localhost:3000/json').then(function(data){
      // return data.json();   //  将获取到的数据使用 json 转换对象
      return data.text(); //  //  将获取到的数据 转换成字符串 
    }).then(function(data){
      // console.log(data.uname)
      // console.log(typeof data)
      var obj = JSON.parse(data);
      console.log(obj.uname,obj.age,obj.gender)
    })

</code></pre>
<h3 id="axios">axios</h3>
<ul>
<li>基于promise用于浏览器和node.js的http客户端</li>
<li>支持浏览器和node.js</li>
<li>支持promise</li>
<li>能拦截请求和响应</li>
<li>自动转换JSON数据</li>
<li>能转换请求和响应数据</li>
</ul>
<h4 id="axios基础用法">axios基础用法</h4>
<ul>
<li>get和 delete请求传递参数
<ul>
<li>通过传统的url  以 ? 的形式传递参数</li>
<li>restful 形式传递参数</li>
<li>通过params  形式传递参数</li>
</ul>
</li>
<li>post  和 put  请求传递参数
<ul>
<li>通过选项传递参数</li>
<li>通过 URLSearchParams  传递参数</li>
</ul>
</li>
</ul>
<pre><code class="language-js">    # 1. 发送get 请求 
	axios.get('http://localhost:3000/adata').then(function(ret){ 
      #  拿到 ret 是一个对象      所有的对象都存在 ret 的data 属性里面
      // 注意data属性是固定的用法，用于获取后台的实际数据
      // console.log(ret.data)
      console.log(ret)
    })
	# 2.  get 请求传递参数
    # 2.1  通过传统的url  以 ? 的形式传递参数
	axios.get('http://localhost:3000/axios?id=123').then(function(ret){
      console.log(ret.data)
    })
    # 2.2  restful 形式传递参数 
    axios.get('http://localhost:3000/axios/123').then(function(ret){
      console.log(ret.data)
    })
	# 2.3  通过params  形式传递参数 
    axios.get('http://localhost:3000/axios', {
      params: {
        id: 789
      }
    }).then(function(ret){
      console.log(ret.data)
    })
	#3 axios delete 请求传参     传参的形式和 get 请求一样
    axios.delete('http://localhost:3000/axios', {
      params: {
        id: 111
      }
    }).then(function(ret){
      console.log(ret.data)
    })

	# 4  axios 的 post 请求
    # 4.1  通过选项传递参数
    axios.post('http://localhost:3000/axios', {
      uname: 'lisi',
      pwd: 123
    }).then(function(ret){
      console.log(ret.data)
    })
	# 4.2  通过 URLSearchParams  传递参数 
    var params = new URLSearchParams();
    params.append('uname', 'zhangsan');
    params.append('pwd', '111');
    axios.post('http://localhost:3000/axios', params).then(function(ret){
      console.log(ret.data)
    })

 	#5  axios put 请求传参   和 post 请求一样 
    axios.put('http://localhost:3000/axios/123', {
      uname: 'lisi',
      pwd: 123
    }).then(function(ret){
      console.log(ret.data)
    })

</code></pre>
<h4 id="axios-全局配置">axios 全局配置</h4>
<pre><code class="language-js">#  配置公共的请求头 
axios.defaults.baseURL = 'https://api.example.com';
#  配置 超时时间
axios.defaults.timeout = 2500;
#  配置公共的请求头
axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;
# 配置公共的 post 的 Content-Type
axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';


</code></pre>
<h4 id="axios-拦截器">axios 拦截器</h4>
<ul>
<li>请求拦截器
<ul>
<li>请求拦截器的作用是在请求发送前进行一些操作
<ul>
<li>例如在每个请求体里加上token，统一做了处理如果以后要改也非常容易</li>
</ul>
</li>
</ul>
</li>
<li>响应拦截器
<ul>
<li>响应拦截器的作用是在接收到响应后进行一些操作
<ul>
<li>例如在服务器返回登录状态失效，需要重新登录的时候，跳转到登录页</li>
</ul>
</li>
</ul>
</li>
</ul>
<pre><code class="language-js">	# 1. 请求拦截器 
	axios.interceptors.request.use(function(config) {
      console.log(config.url)
      # 1.1  任何请求都会经过这一步   在发送请求之前做些什么   
      config.headers.mytoken = 'nihao';
      # 1.2  这里一定要return   否则配置不成功  
      return config;
    }, function(err){
       #1.3 对请求错误做点什么    
      console.log(err)
    })
	#2. 响应拦截器 
    axios.interceptors.response.use(function(res) {
      #2.1  在接收响应做些什么  
      var data = res.data;
      return data;
    }, function(err){
      #2.2 对响应错误做点什么  
      console.log(err)
    })
</code></pre>
<h3 id="async-和-await">async  和 await</h3>
<ul>
<li>async作为一个关键字放到函数前面
<ul>
<li>任何一个<code>async</code>函数都会隐式返回一个<code>promise</code></li>
</ul>
</li>
<li><code>await</code>关键字只能在使用<code>async</code>定义的函数中使用
<ul>
<li>​    await后面可以直接跟一个 Promise实例对象</li>
<li>​     await函数不能单独使用</li>
</ul>
</li>
<li><strong>async/await 让异步代码看起来、表现起来更像同步代码</strong></li>
</ul>
<pre><code class="language-js"> 	# 1.  async 基础用法
    # 1.1 async作为一个关键字放到函数前面
	async function queryData() {
      # 1.2 await关键字只能在使用async定义的函数中使用      await后面可以直接跟一个 Promise实例对象
      var ret = await new Promise(function(resolve, reject){
        setTimeout(function(){
          resolve('nihao')
        },1000);
      })
      // console.log(ret.data)
      return ret;
    }
	# 1.3 任何一个async函数都会隐式返回一个promise   我们可以使用then 进行链式编程
    queryData().then(function(data){
      console.log(data)
    })

	#2.  async    函数处理多个异步函数
    axios.defaults.baseURL = 'http://localhost:3000';

    async function queryData() {
      # 2.1  添加await之后 当前的await 返回结果之后才会执行后面的代码   
      
      var info = await axios.get('async1');
      #2.2  让异步代码看起来、表现起来更像同步代码
      var ret = await axios.get('async2?info=' + info.data);
      return ret.data;
    }

    queryData().then(function(data){
      console.log(data)
    })
</code></pre>
<h3 id="图书列表案例">图书列表案例</h3>
<h4 id="1-基于接口案例-获取图书列表">1. 基于接口案例-获取图书列表</h4>
<ul>
<li>导入axios   用来发送ajax</li>
<li>把获取到的数据渲染到页面上</li>
</ul>
<pre><code class="language-html">  &lt;div id=&quot;app&quot;&gt;
        &lt;div class=&quot;grid&quot;&gt;
            &lt;table&gt;
                &lt;thead&gt;
                    &lt;tr&gt;
                        &lt;th&gt;编号&lt;/th&gt;
                        &lt;th&gt;名称&lt;/th&gt;
                        &lt;th&gt;时间&lt;/th&gt;
                        &lt;th&gt;操作&lt;/th&gt;
                    &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody&gt;
                    &lt;!-- 5.  把books  中的数据渲染到页面上   --&gt;
                    &lt;tr :key='item.id' v-for='item in books'&gt;
                        &lt;td&gt;{{item.id}}&lt;/td&gt;
                        &lt;td&gt;{{item.name}}&lt;/td&gt;
                        &lt;td&gt;{{item.date }}&lt;/td&gt;
                        &lt;td&gt;
                            &lt;a href=&quot;&quot;&gt;修改&lt;/a&gt;
                            &lt;span&gt;|&lt;/span&gt;
                            &lt;a href=&quot;&quot;&gt;删除&lt;/a&gt;
                        &lt;/td&gt;
                    &lt;/tr&gt;
                &lt;/tbody&gt;
            &lt;/table&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;js/vue.js&quot;&gt;&lt;/script&gt;
	1.  导入axios   
    &lt;script type=&quot;text/javascript&quot; src=&quot;js/axios.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        /*
             图书管理-添加图书
         */
        # 2   配置公共的url地址  简化后面的调用方式
        axios.defaults.baseURL = 'http://localhost:3000/';
        axios.interceptors.response.use(function(res) {
            return res.data;
        }, function(error) {
            console.log(error)
        });

        var vm = new Vue({
            el: '#app',
            data: {
                flag: false,
                submitFlag: false,
                id: '',
                name: '',
                books: []
            },
            methods: {
                # 3 定义一个方法 用来发送 ajax 
                # 3.1  使用 async  来 让异步的代码  以同步的形式书写 
                queryData: async function() {
                    // 调用后台接口获取图书列表数据
                    // var ret = await axios.get('books');
                    // this.books = ret.data;
					# 3.2  发送ajax请求  把拿到的数据放在books 里面   
                    this.books = await axios.get('books');
                }
            },

            mounted: function() {
				#  4 mounted  里面 DOM已经加载完毕  在这里调用函数  
                this.queryData();
            }
        });
    &lt;/script&gt;
</code></pre>
<h4 id="2-添加图书">2   添加图书</h4>
<ul>
<li>获取用户输入的数据   发送到后台</li>
<li>渲染最新的数据到页面上</li>
</ul>
<pre><code class="language-js"> methods: {
    handle: async function(){
          if(this.flag) {
            // 编辑图书
            // 就是根据当前的ID去更新数组中对应的数据
            this.books.some((item) =&gt; {
              if(item.id == this.id) {
                item.name = this.name;
                // 完成更新操作之后，需要终止循环
                return true;
              }
            });
            this.flag = false;
          }else{
            # 1.1  在前面封装好的 handle 方法中  发送ajax请求  
            # 1.2  使用async  和 await 简化操作 需要在 function 前面添加 async   
            var ret = await axios.post('books', {
              name: this.name
            })
            # 1.3  根据后台返回的状态码判断是否加载数据 
            if(ret.status == 200) {
             # 1.4  调用 queryData 这个方法  渲染最新的数据 
              this.queryData();
            }
          }
          // 清空表单
          this.id = '';
          this.name = '';
        },        
 }         
</code></pre>
<h4 id="3-验证图书名称是否存在">3  验证图书名称是否存在</h4>
<ul>
<li>添加图书之前发送请求验证图示是否已经存在</li>
<li>如果不存在 往后台里面添加图书名称
<ul>
<li>图书存在与否只需要修改submitFlag的值即可</li>
</ul>
</li>
</ul>
<pre><code class="language-js"> watch: {
        name: async function(val) {
          // 验证图书名称是否已经存在
          // var flag = this.books.some(function(item){
          //   return item.name == val;
          // });
          var ret = await axios.get('/books/book/' + this.name);
          if(ret.status == 1) {
            // 图书名称存在
            this.submitFlag = true;
          }else{
            // 图书名称不存在
            this.submitFlag = false;
          }
        }
},
</code></pre>
<h4 id="4-编辑图书">4.  编辑图书</h4>
<ul>
<li>根据当前书的id 查询需要编辑的书籍</li>
<li>需要根据状态位判断是添加还是编辑</li>
</ul>
<pre><code class="language-js"> methods: {
        handle: async function(){
          if(this.flag) {
            #4.3 编辑图书   把用户输入的信息提交到后台
            var ret = await axios.put('books/' + this.id, {
              name: this.name
            });
            if(ret.status == 200){
              #4.4  完成添加后 重新加载列表数据
              this.queryData();
            }
            this.flag = false;
          }else{
            // 添加图书
            var ret = await axios.post('books', {
              name: this.name
            })
            if(ret.status == 200) {
              // 重新加载列表数据
              this.queryData();
            }
          }
          // 清空表单
          this.id = '';
          this.name = '';
        },
        toEdit: async function(id){
          #4.1  flag状态位用于区分编辑和添加操作
          this.flag = true;
          #4.2  根据id查询出对应的图书信息  页面中可以加载出来最新的信息
          # 调用接口发送ajax 请求  
          var ret = await axios.get('books/' + id);
          this.id = ret.id;
          this.name = ret.name;
        },
</code></pre>
<h4 id="5-删除图书">5 删除图书</h4>
<ul>
<li>把需要删除的id书籍 通过参数的形式传递到后台</li>
</ul>
<pre><code class="language-js">   deleteBook: async function(id){
          // 删除图书
          var ret = await axios.delete('books/' + id);
          if(ret.status == 200) {
            // 重新加载列表数据
            this.queryData();
          }
   }
</code></pre>
]]></content>
    </entry>
</feed>